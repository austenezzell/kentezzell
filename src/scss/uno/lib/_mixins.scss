//  Reusable bits of code
@mixin breakpoint($class) {
  // 'xs' (< 544px) is default
  @if $class == xs {
     @content;
  }

  @else if $class == sm {
    @media (min-width: map_get($grid-breakpoints, sm)) { @content; }
  }

  @else if $class == md {
    @media (min-width: map_get($grid-breakpoints, md)) { @content; }
  }

  @else if $class == lg {
    @media (min-width: map_get($grid-breakpoints, lg)) { @content; }
  }

  @else if $class == xl {
    @media (min-width: map_get($grid-breakpoints, xl)) { @content; }
  }

  @else if $class == xxl {
    @media (min-width: map_get($grid-breakpoints, xxl)) { @content; }
  }

  @else {
    @warn "breakpoint mixin supports: xs, sm, md, lg, xl, xxl";
  }
}

@mixin font-size($size) {
  $base: $base-font-size;
  $h5: $base-font-size / $base-font-scale;
  $h4: $base * $base-font-scale;
  $h3: $h4 * $base-font-scale;
  $h2: $h3 * $base-font-scale;
  $h1: $h2 * $base-font-scale;


  @if $size == base {
    font-size: rem-calc($base);
  }

  @else if $size == h5 {
    font-size: rem-calc($h5);
  }

  @else if $size == h4 {
    font-size: rem-calc($h4);
  }

  @else if $size == h3 {
    font-size: rem-calc($h3);
  }

  @else if $size == h2 {
    font-size: rem-calc($h2);
  }

  @else if $size == h1 {
    font-size: rem-calc($h1);
  }

  @else if $size == sm {
    font-size: 80%;
  }

  @else {
    @warn "font-size mixin supports: base, h1, h2, h3, h4, h5, sm";
  }
}

@mixin maintain-aspect-ratio($w: 1, $h: 1) {
  $width: 100%;
  $height: percentage($h / $w);

  width: $width;
  height: 0;
  padding-bottom: $height;
}
